!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t,n){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=function(){return e=function e(t,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._cardTemplate=document.querySelector("#template__elements"),this._card=this._getTemplate(),this._handleLikeCard=r,this._handleUnlikeCard=o,this._handleCardClick=i,this._likes=t.likes,this._owner=t.owner,this._userId=n,this._cardId=t._id,this._handleDeleteCard=a},(n=[{key:"_getTemplate",value:function(){return this._cardTemplate.cloneNode(!0).content.querySelector(".template__element")}},{key:"_setProperties",value:function(){var e=this;this._cardImage=this._card.querySelector(".element__image"),this._cardTitle=this._card.querySelector(".element__text"),this._likeButton=this._card.querySelector(".element__like-button"),this._likeCounter=this._card.querySelector(".element__like-number"),this._likeCounter.textContent=this._likes.length,this._deleteButton=this._card.querySelector(".element__trash-icon"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._likes.some((function(t){return t._id===e._userId}))&&this._likeButton.classList.toggle("element__like-button-active"),this._owner._id!==this._userId&&this._deleteButton.remove(),this._card.id="id_".concat(this._cardId)}},{key:"_handleDeleteCard",value:function(){this._card.remove()}},{key:"_changeLikeCounter",value:function(e){this._likes=e,this._likeCounter.textContent=e.length}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._likes.some((function(t){return t._id===e._userId}))?(e._handleUnlikeCard(e._cardId).then((function(t){e._changeLikeCounter(t.likes)})),e._likeButton.classList.toggle("element__like-button-active")):(e._handleLikeCard(e._cardId).then((function(t){e._changeLikeCounter(t.likes)})),e._likeButton.classList.toggle("element__like-button-active"))})),this._deleteButton.addEventListener("click",(function(){e._handleDeleteCard(e._cardId)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._link,e._name)}))}},{key:"createCard",value:function(){return this._setProperties(),this._setEventListeners(),this._card}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,a(r.key),r)}}function a(e){var t=function(e,t){if("object"!=o(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==o(t)?t:t+""}var u=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n},(t=[{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._formElement.addEventListener("reset",(function(){e._toggleButtonState()}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._buttonElement.classList.add(this._config.inactiveButtonClass):this._buttonElement.classList.remove(this._config.inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.classList.add(this._config.inputErrorMessageClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.inputErrorMessageClass),t.textContent=" "}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&i(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,s(r.key),r)}}function s(e){var t=function(e,t){if("object"!=c(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}var f=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)},(t=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&l(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),p=document.querySelector(".popup__close-image"),d=document.querySelectorAll(".popup__close-form"),y=(Array.from(document.querySelectorAll(".popup__edit-form")),document.querySelector("#popup__edit-form")),h=document.querySelector("#popup__input-name"),m=document.querySelector("#popup__input-description"),v=document.querySelector(".profile__name"),_=document.querySelector(".profile__description"),b=document.querySelector(".profile__edit-button"),g=document.querySelector(".profile__avatar"),S=document.querySelector(".popup__form_avatar-profile"),E=document.querySelector(".elements"),k=document.querySelector("#popup__add-form"),w=document.querySelector(".profile__add-button"),C={formSelector:"#popup__edit-form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button-disabled",inputErrorClass:"popup__input_type_error",inputErrorMessageClass:"popup__input_type_error"};function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,P(r.key),r)}}function P(e){var t=function(e,t){if("object"!=O(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==O(t)?t:t+""}var L=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._overlayEdit=document.querySelector("#popup-overlay-edit"),this._overlayAdd=document.querySelector("#popup-overlay-add"),this._overlayImage=document.querySelector("#popup-overlay-image"),this._overlayConfirmation=document.querySelector("#popup-overlay-confirmation"),this._overlayAvatar=document.querySelector("#popup-overlay-avatar")},(t=[{key:"handleOpen",value:function(){this._popupElement.classList.add("popup__opened"),this._overlayEdit.classList.add("popup__overlay-opened"),this._overlayAdd.classList.add("popup__overlay-opened"),this._overlayImage.classList.add("popup__overlay-opened"),this._overlayConfirmation.classList.add("popup__overlay-opened"),this._overlayAvatar.classList.add("popup__overlay-opened")}},{key:"handleClose",value:function(){this._popupElement.classList.remove("popup__opened"),this._overlayEdit.classList.remove("popup__overlay-opened"),this._overlayAdd.classList.remove("popup__overlay-opened"),this._overlayImage.classList.remove("popup__overlay-opened"),this._overlayConfirmation.classList.remove("popup__overlay-opened"),this._overlayAvatar.classList.remove("popup__overlay-opened")}},{key:"_handleEscapeKey",value:function(e){"Escape"===e.key&&this.handleClose()}},{key:"setEventListeners",value:function(){var e=this;this._overlayEdit.addEventListener("click",(function(){e.handleClose()})),this._overlayAdd.addEventListener("click",(function(){e.handleClose()})),this._overlayImage.addEventListener("click",(function(){e.handleClose()})),this._overlayConfirmation.addEventListener("click",(function(){e.handleClose()})),this._overlayAvatar.addEventListener("click",(function(){e.handleClose()})),d.forEach((function(t){t.addEventListener("click",(function(){e.handleClose()}))})),p.addEventListener("click",(function(){e.handleClose()})),document.addEventListener("keydown",(function(t){e._handleEscapeKey(t)}))}}])&&j(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,T(r.key),r)}}function T(e){var t=function(e,t){if("object"!=I(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==I(t)?t:t+""}function B(e,t,n){return t=A(t),function(e,t){if(t&&("object"==I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,U()?Reflect.construct(t,n||[],A(e).constructor):t.apply(e,n))}function U(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(U=function(){return!!e})()}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},x.apply(null,arguments)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}var D=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=B(this,t,[e])).handleFormSubmit=n,r._formElement=r._popupElement.querySelector(".popup__edit-form"),r._inputList=Array.from(r._formElement.querySelectorAll(".popup__input")),r._getInputValues=r._getInputValues.bind(r),r._formButton=r._popupElement.querySelector(".popup__save-button"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(t,e),n=t,r=[{key:"_getInputValues",value:function(){var e=this;return this.formValues={},this._inputList.forEach((function(t){e.formValues[t.name]=t.value})),this.formValues}},{key:"handleOpen",value:function(e,n){this._formButton.textContent="Guardar",x(A(t.prototype),"handleOpen",this).call(this),this._inputList[0].value=e||"",this._inputList[1]&&(this._inputList[1].value=n||"")}},{key:"handleClose",value:function(){x(A(t.prototype),"handleClose",this).call(this),this._formElement.reset()}},{key:"setEventListeners",value:function(){var e=this;x(A(t.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._formButton.textContent="Guardando...",e.handleFormSubmit(e._getInputValues(),(function(){return e.handleClose()}))}))}}],r&&q(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(L);function V(e){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},V(e)}function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,G(r.key),r)}}function G(e){var t=function(e,t){if("object"!=V(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=V(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==V(t)?t:t+""}var M=function(){return e=function e(t){var n=t.nameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._description=document.querySelector(r),this._avatar=document.querySelector(o)},(t=[{key:"getUserInfo",value:function(){return{userName:this._name.textContent,userDescription:this._description.textContent,userAvatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._description.textContent=e.about,e.avatar&&(this._avatar.src=e.avatar),e._id&&(this._userId=e._id)}}])&&N(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,H(r.key),r)}}function H(e){var t=function(e,t){if("object"!=F(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==F(t)?t:t+""}function K(e,t,n){return t=W(t),function(e,t){if(t&&("object"==F(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,z()?Reflect.construct(t,n||[],W(e).constructor):t.apply(e,n))}function z(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(z=function(){return!!e})()}function Q(){return Q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=W(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},Q.apply(null,arguments)}function W(e){return W=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},W(e)}function X(e,t){return X=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},X(e,t)}var Y=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=K(this,t,[e])).handleOpen=n.handleOpen.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&X(e,t)}(t,e),n=t,(r=[{key:"handleOpen",value:function(e,n){Q(W(t.prototype),"handleOpen",this).call(this),this._image=document.querySelector(".popup__element-image"),this._title=document.querySelector(".popup__element-title"),this._image.alt="Fotografia de ".concat(n),this._image.src=e,this._title.textContent=n}}])&&J(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(L);function Z(e){return Z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Z(e)}function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,ee(r.key),r)}}function ee(e){var t=function(e,t){if("object"!=Z(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Z(t)?t:t+""}function te(e,t,n){return t=oe(t),function(e,t){if(t&&("object"==Z(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,ne()?Reflect.construct(t,n||[],oe(e).constructor):t.apply(e,n))}function ne(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(ne=function(){return!!e})()}function re(){return re="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=oe(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},re.apply(null,arguments)}function oe(e){return oe=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},oe(e)}function ie(e,t){return ie=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ie(e,t)}var ae=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=te(this,t,[e]))._handleConfirmation=n,r._formElement=r._popupElement.querySelector(".popup__form_delete-confirmation"),r.cardId="",r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ie(e,t)}(t,e),n=t,r=[{key:"setEventListeners",value:function(){var e=this;re(oe(t.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleConfirmation(e.cardId)}))}},{key:"handleOpen",value:function(e){this.cardId=e,re(oe(t.prototype),"handleOpen",this).call(this)}},{key:"handleClose",value:function(){re(oe(t.prototype),"handleClose",this).call(this)}}],r&&$(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(L);function ue(e){return ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ue(e)}function ce(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,le(r.key),r)}}function le(e){var t=function(e,t){if("object"!=ue(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=ue(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ue(t)?t:t+""}var se=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers},(t=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"editProfile",value:function(e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"editAvatarProfile",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e.avatarLink})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"addCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"addLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"removeLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}}])&&ce(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();h.value=v.textContent,m.value=_.textContent;var fe=new M({nameSelector:".profile__name",descriptionSelector:".profile__description",avatarSelector:".profile__avatar-image"}),pe=new se({baseUrl:"https://around.nomoreparties.co/v1/web_es_11",headers:{authorization:"6bb9691a-4f67-46d0-9c5a-49bb45cb7185","Content-Type":"application/json"}});pe.getUserInfo().then((function(e){fe.setUserInfo(e),pe.getInitialCards().then((function(e){var t=new f({items:e,renderer:function(e){var n=new r(e,fe._userId,(function(e){return pe.addLike(e)}),(function(e){return pe.removeLike(e)}),ye.handleOpen,(function(){ve.handleOpen(e._id)})).createCard();t.addItem(n)}},".elements");t.renderItems()}))}));var de=new D("#place-popup",(function(e,t){pe.addCard(e).then((function(e){var n=new r(e,fe._userId,(function(e){return pe.addLike(e)}),(function(e){return pe.removeLike(e)}),ye.handleOpen,(function(){ve.handleOpen(e._id)})).createCard();E.prepend(n),de.handleClose,t()}))}));de.setEventListeners();var ye=new Y("#image-popup");ye.setEventListeners();var he=new D("#popup-profile",(function(e,t){pe.editProfile(e).then((function(e){fe.setUserInfo(e),he.handleClose()}))}));he.setEventListeners();var me=new D("#popup-avatar-profile",(function(e){pe.editAvatarProfile(e).then((function(e){fe.setUserInfo(e),me.handleClose()}))}));me.setEventListeners();var ve=new ae("#popup-delete-confirmation",(function(e){pe.deleteCard(e).then((function(){ve.handleClose(),document.querySelector("#id_".concat(e)).remove()}))}));ve.setEventListeners(),b.addEventListener("click",(function(){he.handleOpen(v.textContent,_.textContent),new u(C,y).enableValidation()})),g.addEventListener("click",(function(){me.handleOpen(),new u(C,S).enableValidation()})),w.addEventListener("click",(function(){de.handleOpen(),new u(C,k).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,