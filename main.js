!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(t){var r=function(t,r){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(r)?r:r+""}var n=function(){return e=function e(t,r,n,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._link=r,this._likes=n,this.owner=o,this.userId=u,this.open=i},(r=[{key:"_getTemplate",value:function(){return this._cardElement=document.querySelector("#template__elements").content.querySelector(".template__element").cloneNode(!0),this._cardElement}},{key:"_setProperties",value:function(){this._card=this._getTemplate(),this._cardImage=this._card.querySelector(".element__image"),this._cardImage.alt="Fotografia de ".concat(this._name),this._cardImage.src=this._link,this._cardTitle=this._card.querySelector(".element__text").textContent=this._name,this._buttonLikeCard=this._card.querySelector(".element__like-button"),this._likeCounter=this._card.querySelector(".element__like-number"),this._likeCounter.textContent=this._likes.length,this._buttonDeleteCard=this._card.querySelector(".element__trash-icon"),console.log("owner id",this.owner,"user id",this.userId),this.owner!==this.userId&&this._buttonDeleteCard.remove()}},{key:"_handleLikeBtn",value:function(){this._buttonLikeCard.classList.toggle("element__like-button-active")}},{key:"_handleDeleteBtn",value:function(){this._card.remove()}},{key:"handleCardClick",value:function(){this.open(this._cardTitle,this._cardImage.src)}},{key:"_setEventListeners",value:function(){var e=this;this._buttonLikeCard.addEventListener("click",(function(){e._handleLikeBtn()})),this._buttonDeleteCard.addEventListener("click",(function(){e._handleDeleteBtn()})),this._cardImage.addEventListener("click",(function(){e.handleCardClick()}))}},{key:"generateCard",value:function(){return this._setProperties(),this._setEventListeners(),this._card}}])&&t(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,r}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function u(e){var t=function(e,t){if("object"!=o(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==o(t)?t:t+""}var a=function(){return e=function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._settings=r,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)},(t=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.setAttribute("disabled",!0)):(this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.removeAttribute("disabled"))}},{key:"_showInputError",value:function(e,t){this._errorElement=this._formElement.querySelector("#".concat(e.id,"-error")),this._errorElement.textContent=t,e.classList.add(this._settings.inputErrorClass),this._errorElement.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(e){this._errorElement=this._formElement.querySelector("#".concat(e.id,"-error")),this._errorElement.textContent="",e.classList.remove(this._settings.inputErrorClass),this._errorElement.classList.remove(this._settings.errorClass)}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}}])&&i(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,l(n.key),n)}}function l(e){var t=function(e,t){if("object"!=c(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}var f=function(){return e=function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=n,this._renderer=o,this._container=r},(t=[{key:"renderer",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}}])&&s(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),p=document.querySelector(".elements"),y=(document.querySelector("#image-popup"),document.querySelector(".popup__close-image")),m=(document.querySelector("#btn-close-place"),document.querySelector(".profile__edit-button")),d=document.querySelector(".profile__add-button"),h=document.querySelectorAll(".popup__close-form"),b=Array.from(document.querySelectorAll(".popup__edit-form")),v=(document.querySelector("#btn-close-profile"),document.querySelector("#btn-submit-place"),document.querySelector("#popup__input-name")),_=document.querySelector("#popup__input-description"),g=document.querySelector(".profile__avatar-image"),S={formSelector:"#popup__edit-form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button-disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input_type_error"};function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,k(n.key),n)}}function k(e){var t=function(e,t){if("object"!=E(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==E(t)?t:t+""}var j=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._overlayEdit=document.querySelector("#popup-overlay-edit"),this._overlayAdd=document.querySelector("#popup-overlay-add"),this._overlayImage=document.querySelector("#popup-overlay-image")},(t=[{key:"open",value:function(){this._popupElement.classList.add("popup__opened"),this._overlayEdit.classList.add("popup__overlay-opened"),this._overlayAdd.classList.add("popup__overlay-opened"),this._overlayImage.classList.add("popup__overlay-opened")}},{key:"close",value:function(){this._popupElement.classList.remove("popup__opened"),this._overlayEdit.classList.remove("popup__overlay-opened"),this._overlayAdd.classList.remove("popup__overlay-opened"),this._overlayImage.classList.remove("popup__overlay-opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._overlayEdit.addEventListener("click",(function(){e.close()})),this._overlayAdd.addEventListener("click",(function(){e.close()})),this._overlayImage.addEventListener("click",(function(){e.close()})),h.forEach((function(t){t.addEventListener("click",(function(){e.close()}))})),y.addEventListener("click",(function(){e.close()})),document.addEventListener("keydown",(function(t){e._handleEscClose(t)}))}}])&&w(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function C(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,L(n.key),n)}}function L(e){var t=function(e,t){if("object"!=P(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==P(t)?t:t+""}function O(e,t,r){return t=T(t),function(e,t){if(t&&("object"==P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,I()?Reflect.construct(t,r||[],T(e).constructor):t.apply(e,r))}function I(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(I=function(){return!!e})()}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},q.apply(null,arguments)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}var A=function(e){function t(e,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=O(this,t,[e])).handleFormSubmit=r,n._formElement=n._popupElement.querySelector(".popup__edit-form"),n._inputList=Array.from(n._formElement.querySelectorAll(".popup__input")),n._getInputValues=n._getInputValues.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(t,e),r=t,(n=[{key:"_getInputValues",value:function(){var e=this;return this.formValues={},this._inputList.forEach((function(t){e.formValues[t.name]=t.value})),this.formValues}},{key:"close",value:function(){q(T(t.prototype),"close",this).call(this),this._formElement.reset()}},{key:"setEventListeners",value:function(){var e=this;q(T(t.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues())}))}}])&&C(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(j);function V(e){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},V(e)}function U(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,x(n.key),n)}}function x(e){var t=function(e,t){if("object"!=V(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=V(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==V(t)?t:t+""}var R=function(){return e=function e(t){var r=t.name,n=t.about,o=t.avatar,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(r),this._userAboutme=document.querySelector(n),this.avatar=document.querySelector(o),this._userId=i,this.userValues={name:"",about:""}},(t=[{key:"getUserInfo",value:function(){return this.userValues.name=this._userName.textContent,this.userValues.about=this._userAboutme.textContent,this.userValues}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userAboutme.textContent=e.about,this._userId=e._Id,this.avatar.src=e.avatar}}])&&U(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function N(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,F(n.key),n)}}function F(e){var t=function(e,t){if("object"!=D(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}function G(e,t,r){return t=H(t),function(e,t){if(t&&("object"==D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,J()?Reflect.construct(t,r||[],H(e).constructor):t.apply(e,r))}function J(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(J=function(){return!!e})()}function z(){return z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},z.apply(null,arguments)}function H(e){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},H(e)}function M(e,t){return M=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},M(e,t)}var K=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=G(this,t,[e])).handleCardClick=r.open.bind(r),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&M(e,t)}(t,e),r=t,(n=[{key:"open",value:function(e,r){this._showImage=document.querySelector(".popup__element-image"),this._showSubtitle=document.querySelector(".popup__element-title"),this._showImage.alt="Fotografia de ".concat(e),this._showImage.src=r,this._showSubtitle.textContent=e,z(H(t.prototype),"open",this).call(this)}}])&&N(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(j);function Q(e){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Q(e)}function W(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,X(n.key),n)}}function X(e){var t=function(e,t){if("object"!=Q(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=Q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Q(t)?t:t+""}var Y=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers},t=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editProfile",value:function(e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}],t&&W(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),Z=new Y({baseUrl:"https://around.nomoreparties.co/v1/web_es_11",headers:{authorization:"6bb9691a-4f67-46d0-9c5a-49bb45cb7185","Content-Type":"application/json"}});Z.getInitialCards().then((function(e){e.forEach((function(){var t=new f({items:e,renderer:function(e){var r=new n(e.name,e.link,e.likes,$.handleCardClick,e.userId).generateCard();t.addItem(r)}},p);t.renderer()}))}));var $=new K("#image-popup");function ee(){b.forEach((function(e){new a(e,S).enableValidation()}))}function te(){b.forEach((function(e){new a(e,S).resetValidation()}))}function re(){b.forEach((function(e){new a(e,S)._toggleButtonState()}))}$.setEventListeners();var ne=new R({name:".profile__name",about:".profile__description",avatar:".profile__avatar-image"});Z.getUserInfo().then((function(e){ne.setUserInfo({name:e.name,about:e.about}),g.src=e.avatar}));var oe=new A("#popup-profile",(function(e){Z.editProfile(e).then((function(e){ne.setUserInfo({name:e.name,about:e.about}),g.src=e.avatar})),oe.close()})),ie=new A("#place-popup",(function(e){Z.addCard(e).then((function(e){var t=new n(e.name,e.link,e.likes,$.handleCardClick).generateCard();ie.close(),p.append(t)}))}));m.addEventListener("click",(function(){oe.open(),ee(),re();var e=new R({name:".profile__name",about:".profile__description"}).getUserInfo();v.value=e.name,_.value=e.about,te()})),d.addEventListener("click",(function(){ie.open(),ee(),re(),te()})),oe.setEventListeners(),ie.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiaXNCQUFxQkEsRUFBSSxXQVN2QixPLEVBUkEsU0FBQUEsRUFBWUMsRUFBTUMsRUFBTUMsRUFBT0MsRUFBT0MsRUFBaUJDLEksNEZBQVFDLENBQUEsS0FBQVAsR0FDN0RRLEtBQUtDLE1BQVFSLEVBQ2JPLEtBQUtFLE1BQVFSLEVBQ2JNLEtBQUtHLE9BQVNSLEVBQ2RLLEtBQUtKLE1BQVFBLEVBQ2JJLEtBQUtGLE9BQVNBLEVBQ2RFLEtBQUtJLEtBQU9QLENBQ2QsRyxFQUNBLEVBQUFRLElBQUEsZUFBQUMsTUFDQSxXQU1FLE9BTEFOLEtBQUtPLGFBQWVDLFNBQ2pCQyxjQUFjLHVCQUNkQyxRQUFRRCxjQUFjLHNCQUN0QkUsV0FBVSxHQUVOWCxLQUFLTyxZQUNkLEdBQUMsQ0FBQUYsSUFBQSxpQkFBQUMsTUFFRCxXQUNFTixLQUFLWSxNQUFRWixLQUFLYSxlQUNsQmIsS0FBS2MsV0FBYWQsS0FBS1ksTUFBTUgsY0FBYyxtQkFDM0NULEtBQUtjLFdBQVdDLElBQU0saUJBQUhDLE9BQW9CaEIsS0FBS0MsT0FDNUNELEtBQUtjLFdBQVdHLElBQU1qQixLQUFLRSxNQUMzQkYsS0FBS2tCLFdBQWFsQixLQUFLWSxNQUFNSCxjQUFjLGtCQUFrQlUsWUFDM0RuQixLQUFLQyxNQUNQRCxLQUFLb0IsZ0JBQWtCcEIsS0FBS1ksTUFBTUgsY0FBYyx5QkFFaERULEtBQUtxQixhQUFlckIsS0FBS1ksTUFBTUgsY0FBYyx5QkFDN0NULEtBQUtxQixhQUFhRixZQUFjbkIsS0FBS0csT0FBT21CLE9BRTVDdEIsS0FBS3VCLGtCQUFvQnZCLEtBQUtZLE1BQU1ILGNBQWMsd0JBQ2xEZSxRQUFRQyxJQUFJLFdBQVl6QixLQUFLSixNQUFPLFVBQVdJLEtBQUtGLFFBQ2hERSxLQUFLSixRQUFVSSxLQUFLRixRQUN0QkUsS0FBS3VCLGtCQUFrQkcsUUFXM0IsR0FBQyxDQUFBckIsSUFBQSxpQkFBQUMsTUFFRCxXQUNFTixLQUFLb0IsZ0JBQWdCTyxVQUFVQyxPQUFPLDhCQUN4QyxHQUFDLENBQUF2QixJQUFBLG1CQUFBQyxNQUNELFdBQ0VOLEtBQUtZLE1BQU1jLFFBQ2IsR0FBQyxDQUFBckIsSUFBQSxrQkFBQUMsTUFDRCxXQUNFTixLQUFLSSxLQUFLSixLQUFLa0IsV0FBWWxCLEtBQUtjLFdBQVdHLElBQzdDLEdBWUEsQ0FBQVosSUFBQSxxQkFBQUMsTUFFQSxXQUFxQixJQUFBdUIsRUFBQSxLQUNuQjdCLEtBQUtvQixnQkFBZ0JVLGlCQUFpQixTQUFTLFdBQzdDRCxFQUFLRSxnQkFDUCxJQUNBL0IsS0FBS3VCLGtCQUFrQk8saUJBQWlCLFNBQVMsV0FDL0NELEVBQUtHLGtCQUNQLElBQ0FoQyxLQUFLYyxXQUFXZ0IsaUJBQWlCLFNBQVMsV0FDeENELEVBQUtoQyxpQkFDUCxHQUNGLEdBQUMsQ0FBQVEsSUFBQSxlQUFBQyxNQUVELFdBR0UsT0FGQU4sS0FBS2lDLGlCQUNMakMsS0FBS2tDLHFCQUNFbEMsS0FBS1ksS0FDZCxNLDZFQUFDLENBckZzQixHLG9xQkNBekIsSUFDcUJ1QixFQUFhLFdBWWhDLE8sRUFYQSxTQUFBQSxFQUFZQyxFQUFhQyxJLDRGQUFVdEMsQ0FBQSxLQUFBb0MsR0FDakNuQyxLQUFLc0MsYUFBZUYsRUFDcEJwQyxLQUFLdUMsVUFBWUYsRUFFakJyQyxLQUFLd0MsV0FBYUMsTUFBTUMsS0FDdEIxQyxLQUFLc0MsYUFBYUssaUJBQWlCM0MsS0FBS3VDLFVBQVVLLGdCQUVwRDVDLEtBQUs2QyxjQUFnQjdDLEtBQUtzQyxhQUFhN0IsY0FDckNULEtBQUt1QyxVQUFVTyxxQkFFbkIsRyxFQUNBLEVBQUF6QyxJQUFBLG1CQUFBQyxNQUNBLFdBQ0VOLEtBQUtzQyxhQUFhUixpQkFBaUIsVUFBVSxTQUFVaUIsR0FDckRBLEVBQUlDLGdCQUNOLElBQ0FoRCxLQUFLa0Msb0JBQ1AsR0FDQSxDQUFBN0IsSUFBQSxxQkFBQUMsTUFDQSxXQUFxQixJQUFBdUIsRUFBQSxLQUNuQjdCLEtBQUtpRCxxQkFDTGpELEtBQUt3QyxXQUFXVSxTQUFRLFNBQUNDLEdBQ3ZCQSxFQUFhckIsaUJBQWlCLFNBQVMsV0FDckNELEVBQUt1QixvQkFBb0JELEdBQ3pCdEIsRUFBS29CLG9CQUNQLEdBQ0YsR0FDRixHQUNBLENBQUE1QyxJQUFBLHNCQUFBQyxNQUNBLFNBQW9CNkMsR0FDYkEsRUFBYUUsU0FBU0MsTUFHekJ0RCxLQUFLdUQsZ0JBQWdCSixHQUZyQm5ELEtBQUt3RCxnQkFBZ0JMLEVBQWNBLEVBQWFNLGtCQUlwRCxHQUNBLENBQUFwRCxJQUFBLG1CQUFBQyxNQUNBLFdBQ0UsT0FBT04sS0FBS3dDLFdBQVdrQixNQUFLLFNBQUNQLEdBQzNCLE9BQVFBLEVBQWFFLFNBQVNDLEtBQ2hDLEdBQ0YsR0FDQSxDQUFBakQsSUFBQSxxQkFBQUMsTUFDQSxXQUNNTixLQUFLMkQsaUJBQWlCM0QsS0FBS3dDLGFBQzdCeEMsS0FBSzZDLGNBQWNsQixVQUFVaUMsSUFBSTVELEtBQUt1QyxVQUFVc0IscUJBQ2hEN0QsS0FBSzZDLGNBQWNpQixhQUFhLFlBQVksS0FFNUM5RCxLQUFLNkMsY0FBY2xCLFVBQVVELE9BQU8xQixLQUFLdUMsVUFBVXNCLHFCQUNuRDdELEtBQUs2QyxjQUFja0IsZ0JBQWdCLFlBRXZDLEdBQ0EsQ0FBQTFELElBQUEsa0JBQUFDLE1BQ0EsU0FBZ0I2QyxFQUFjYSxHQUM1QmhFLEtBQUtpRSxjQUFnQmpFLEtBQUtzQyxhQUFhN0IsY0FBYyxJQUFETyxPQUM5Q21DLEVBQWFlLEdBQUUsV0FFckJsRSxLQUFLaUUsY0FBYzlDLFlBQWM2QyxFQUNqQ2IsRUFBYXhCLFVBQVVpQyxJQUFJNUQsS0FBS3VDLFVBQVU0QixpQkFDMUNuRSxLQUFLaUUsY0FBY3RDLFVBQVVpQyxJQUFJNUQsS0FBS3VDLFVBQVU2QixXQUNsRCxHQUNBLENBQUEvRCxJQUFBLGtCQUFBQyxNQUNBLFNBQWdCNkMsR0FDZG5ELEtBQUtpRSxjQUFnQmpFLEtBQUtzQyxhQUFhN0IsY0FBYyxJQUFETyxPQUM5Q21DLEVBQWFlLEdBQUUsV0FFckJsRSxLQUFLaUUsY0FBYzlDLFlBQWMsR0FDakNnQyxFQUFheEIsVUFBVUQsT0FBTzFCLEtBQUt1QyxVQUFVNEIsaUJBQzdDbkUsS0FBS2lFLGNBQWN0QyxVQUFVRCxPQUFPMUIsS0FBS3VDLFVBQVU2QixXQUNyRCxHQUNBLENBQUEvRCxJQUFBLGtCQUFBQyxNQUNBLFdBQWtCLElBQUErRCxFQUFBLEtBQ2hCckUsS0FBS3dDLFdBQVdVLFNBQVEsU0FBQ0MsR0FDdkJrQixFQUFLZCxnQkFBZ0JKLEVBQ3ZCLElBQ0FuRCxLQUFLaUQsb0JBQ1AsTSw2RUFBQyxDQTdFK0IsRyx3cUJDRGJxQixFQUFPLFdBS3pCLE8sRUFKRCxTQUFBQSxFQUFBQyxFQUFpQ0MsR0FBZSxJQUFsQ0MsRUFBS0YsRUFBTEUsTUFBT0MsRUFBUUgsRUFBUkcsVSw0RkFBUTNFLENBQUEsS0FBQXVFLEdBQzNCdEUsS0FBSzJFLGVBQWlCRixFQUN0QnpFLEtBQUs0RSxVQUFZRixFQUNqQjFFLEtBQUs2RSxXQUFhTCxDQUNwQixHLEVBQUMsRUFBQW5FLElBQUEsV0FBQUMsTUFFRCxXQUFXLElBQUF1QixFQUFBLEtBQ1Q3QixLQUFLMkUsZUFBZXpCLFNBQVEsU0FBQzRCLEdBQzNCakQsRUFBSytDLFVBQVVFLEVBQ2pCLEdBQ0YsR0FBQyxDQUFBekUsSUFBQSxVQUFBQyxNQUVELFNBQVF5RSxHQUNOL0UsS0FBSzZFLFdBQVdHLE9BQU9ELEVBQ3pCLE0sNkVBQUMsQ0FmeUIsR0MwQmZFLEVBQW9CekUsU0FBU0MsY0FBYyxhQUUzQ3lFLEdBRGlCMUUsU0FBU0MsY0FBYyxnQkFDakJELFNBQVNDLGNBQzNDLHdCQUdXMEUsR0FEc0IzRSxTQUFTQyxjQUFjLG9CQUM3QkQsU0FBU0MsY0FBYywwQkFDdkMyRSxFQUFtQjVFLFNBQVNDLGNBQWMsd0JBQzFDNEUsRUFBa0I3RSxTQUFTbUMsaUJBQWlCLHNCQUM1QzJDLEVBQVc3QyxNQUFNQyxLQUM1QmxDLFNBQVNtQyxpQkFBaUIsc0JBSWY0QyxHQUZvQi9FLFNBQVNDLGNBQWMsc0JBQzFCRCxTQUFTQyxjQUFjLHFCQUN4QkQsU0FBU0MsY0FBYyx1QkFDdkMrRSxFQUFtQmhGLFNBQVNDLGNBQ3ZDLDZCQUVXZ0YsRUFBY2pGLFNBQVNDLGNBQWMsMEJBQ3JDNEIsRUFBVyxDQUN0QnFELGFBQWMsb0JBQ2Q5QyxjQUFlLGdCQUNmRSxxQkFBc0IsaUJBQ3RCZSxvQkFBcUIseUJBQ3JCTSxnQkFBaUIsMEJBQ2pCQyxXQUFZLDJCLG9xQkNuRHFELElBRTlDdUIsRUFBSyxXQU12QixPLEVBTEQsU0FBQUEsRUFBWUMsSSw0RkFBZTdGLENBQUEsS0FBQTRGLEdBQ3pCM0YsS0FBSzZGLGNBQWdCckYsU0FBU0MsY0FBY21GLEdBQzVDNUYsS0FBSzhGLGFBQWV0RixTQUFTQyxjQUFjLHVCQUMzQ1QsS0FBSytGLFlBQWN2RixTQUFTQyxjQUFjLHNCQUMxQ1QsS0FBS2dHLGNBQWdCeEYsU0FBU0MsY0FBYyx1QkFDOUMsRyxFQUFDLEVBQUFKLElBQUEsT0FBQUMsTUFDRCxXQUNFTixLQUFLNkYsY0FBY2xFLFVBQVVpQyxJQUFJLGlCQUNqQzVELEtBQUs4RixhQUFhbkUsVUFBVWlDLElBQUkseUJBQ2hDNUQsS0FBSytGLFlBQVlwRSxVQUFVaUMsSUFBSSx5QkFDL0I1RCxLQUFLZ0csY0FBY3JFLFVBQVVpQyxJQUFJLHdCQUNuQyxHQUFDLENBQUF2RCxJQUFBLFFBQUFDLE1BQ0QsV0FDRU4sS0FBSzZGLGNBQWNsRSxVQUFVRCxPQUFPLGlCQUNwQzFCLEtBQUs4RixhQUFhbkUsVUFBVUQsT0FBTyx5QkFDbkMxQixLQUFLK0YsWUFBWXBFLFVBQVVELE9BQU8seUJBQ2xDMUIsS0FBS2dHLGNBQWNyRSxVQUFVRCxPQUFPLHdCQUN0QyxHQUFDLENBQUFyQixJQUFBLGtCQUFBQyxNQUNELFNBQWdCeUMsR0FDRSxXQUFaQSxFQUFJMUMsS0FDTkwsS0FBS2lHLE9BRVQsR0FBQyxDQUFBNUYsSUFBQSxvQkFBQUMsTUFDRCxXQUFvQixJQUFBdUIsRUFBQSxLQUNsQjdCLEtBQUs4RixhQUFhaEUsaUJBQWlCLFNBQVMsV0FDMUNELEVBQUtvRSxPQUNQLElBQ0FqRyxLQUFLK0YsWUFBWWpFLGlCQUFpQixTQUFTLFdBQ3pDRCxFQUFLb0UsT0FDUCxJQUNBakcsS0FBS2dHLGNBQWNsRSxpQkFBaUIsU0FBUyxXQUMzQ0QsRUFBS29FLE9BQ1AsSUFFQVosRUFBZ0JuQyxTQUFRLFNBQUNnRCxHQUN2QkEsRUFBWXBFLGlCQUFpQixTQUFTLFdBQ3BDRCxFQUFLb0UsT0FDUCxHQUNGLElBQ0FmLEVBQXFCcEQsaUJBQWlCLFNBQVMsV0FDN0NELEVBQUtvRSxPQUNQLElBQ0F6RixTQUFTc0IsaUJBQWlCLFdBQVcsU0FBQ2lCLEdBQ3BDbEIsRUFBS3NFLGdCQUFnQnBELEVBQ3ZCLEdBQ0YsTSw2RUFBQyxDQTlDdUIsRywydkRDRkssSUFFVnFELEVBQWEsU0FBQUMsR0FDaEMsU0FBQUQsRUFBWVIsRUFBZVUsR0FBa0IsSUFBQXpFLEVBT1ksTyw0RkFQWjlCLENBQUEsS0FBQXFHLElBQzNDdkUsRUFBQTBFLEVBQUEsS0FBQUgsRUFBQSxDQUFNUixLQUNEVSxpQkFBbUJBLEVBQ3hCekUsRUFBS1MsYUFBZVQsRUFBS2dFLGNBQWNwRixjQUFjLHFCQUNyRG9CLEVBQUtXLFdBQWFDLE1BQU1DLEtBQ3RCYixFQUFLUyxhQUFhSyxpQkFBaUIsa0JBRXJDZCxFQUFLMkUsZ0JBQWtCM0UsRUFBSzJFLGdCQUFnQkMsS0FBSTVFLEdBQU9BLENBQ3pELENBQUMsTyxxUkFBQTZFLENBQUFOLEVBQUFDLEcsRUFBQUQsRyxFQUFBLEVBQUEvRixJQUFBLGtCQUFBQyxNQUNELFdBQWtCLElBQUErRCxFQUFBLEtBTWhCLE9BTEFyRSxLQUFLMkcsV0FBYSxDQUFDLEVBQ25CM0csS0FBS3dDLFdBQVdVLFNBQVEsU0FBQzBELEdBQ3ZCdkMsRUFBS3NDLFdBQVdDLEVBQU1uSCxNQUFRbUgsRUFBTXRHLEtBQ3RDLElBRU9OLEtBQUsyRyxVQUNkLEdBQUMsQ0FBQXRHLElBQUEsUUFBQUMsTUFDRCxXQUNFdUcsRUFBQUMsRUFBQVYsRUFBQVcsV0FBQSxjQUFBQyxLQUFBLE1BQ0FoSCxLQUFLc0MsYUFBYTJFLE9BQ3BCLEdBQUMsQ0FBQTVHLElBQUEsb0JBQUFDLE1BRUQsV0FBb0IsSUFBQTRHLEVBQUEsS0FDbEJMLEVBQUFDLEVBQUFWLEVBQUFXLFdBQUEsMEJBQUFDLEtBQUEsTUFDQWhILEtBQUtzQyxhQUFhUixpQkFBaUIsVUFBVSxTQUFDaUIsR0FDNUNBLEVBQUlDLGlCQUNKa0UsRUFBS1osaUJBQWlCWSxFQUFLVixrQkFDN0IsR0FDRixNLDZFQUFDLENBN0IrQixDQUFTYixHLHdxQkNGdEJ3QixFQUFRLFdBTzFCLE8sRUFORCxTQUFBQSxFQUFBNUMsR0FBNkMsSUFBL0I5RSxFQUFJOEUsRUFBSjlFLEtBQU0ySCxFQUFLN0MsRUFBTDZDLE1BQU9DLEVBQU05QyxFQUFOOEMsT0FBUXZILEVBQU15RSxFQUFOekUsUSw0RkFBTUMsQ0FBQSxLQUFBb0gsR0FDdkNuSCxLQUFLc0gsVUFBWTlHLFNBQVNDLGNBQWNoQixHQUN4Q08sS0FBS3VILGFBQWUvRyxTQUFTQyxjQUFjMkcsR0FDM0NwSCxLQUFLcUgsT0FBUzdHLFNBQVNDLGNBQWM0RyxHQUNyQ3JILEtBQUt3SCxRQUFVMUgsRUFDZkUsS0FBS3lILFdBQWEsQ0FBRWhJLEtBQU0sR0FBSTJILE1BQU8sR0FDdkMsRyxFQUFDLEVBQUEvRyxJQUFBLGNBQUFDLE1BRUQsV0FLRSxPQUpBTixLQUFLeUgsV0FBV2hJLEtBQU9PLEtBQUtzSCxVQUFVbkcsWUFDdENuQixLQUFLeUgsV0FBV0wsTUFBUXBILEtBQUt1SCxhQUFhcEcsWUFHbkNuQixLQUFLeUgsVUFDZCxHQUFDLENBQUFwSCxJQUFBLGNBQUFDLE1BRUQsU0FBWW9ILEdBQ1YxSCxLQUFLc0gsVUFBVW5HLFlBQWN1RyxFQUFLakksS0FDbENPLEtBQUt1SCxhQUFhcEcsWUFBY3VHLEVBQUtOLE1BQ3JDcEgsS0FBS3dILFFBQVVFLEVBQUtDLElBQ3BCM0gsS0FBS3FILE9BQU9wRyxJQUFNeUcsRUFBS0wsTUFPekIsTSw2RUFBQyxDQTVCMEIsRywydkRDQUUsSUFFVk8sRUFBYyxTQUFBdkIsR0FDakMsU0FBQXVCLEVBQVloQyxHQUFlLElBQUEvRCxFQUVtQixPLDRGQUZuQjlCLENBQUEsS0FBQTZILElBQ3pCL0YsRUFBQTBFLEVBQUEsS0FBQXFCLEVBQUEsQ0FBTWhDLEtBQ0QvRixnQkFBa0JnQyxFQUFLekIsS0FBS3FHLEtBQUk1RSxHQUFPQSxDQUM5QyxDQUFDLE8scVJBQUE2RSxDQUFBa0IsRUFBQXZCLEcsRUFBQXVCLEcsRUFBQSxFQUFBdkgsSUFBQSxPQUFBQyxNQUNELFNBQUtiLEVBQU1DLEdBQ1RNLEtBQUs2SCxXQUFhckgsU0FBU0MsY0FBYyx5QkFDekNULEtBQUs4SCxjQUFnQnRILFNBQVNDLGNBQWMseUJBQzVDVCxLQUFLNkgsV0FBVzlHLElBQU0saUJBQUhDLE9BQW9CdkIsR0FDdkNPLEtBQUs2SCxXQUFXNUcsSUFBTXZCLEVBQ3RCTSxLQUFLOEgsY0FBYzNHLFlBQWMxQixFQUNqQ29ILEVBQUFDLEVBQUFjLEVBQUFiLFdBQUEsYUFBQUMsS0FBQSxLQUNGLE0sNkVBQUMsQ0FaZ0MsQ0FBU3JCLEcsd3FCQ0Z2Qm9DLEVBQUcsV0FLckIsTyxFQUpELFNBQUFBLEVBQVlDLEksNEZBQVNqSSxDQUFBLEtBQUFnSSxHQUVuQi9ILEtBQUtpSSxRQUFVRCxFQUFRQyxRQUN2QmpJLEtBQUtrSSxRQUFVRixFQUFRRSxPQUN6QixFLEVBQUMsRUFBQTdILElBQUEsa0JBQUFDLE1BRUQsV0FDRSxPQUFPNkgsTUFBTSxHQUFEbkgsT0FBSWhCLEtBQUtpSSxRQUFPLFVBQVUsQ0FDcENHLE9BQVEsTUFDUkYsUUFBU2xJLEtBQUtrSSxVQUNiRyxNQUFLLFNBQUNDLEdBQ1AsT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FHTkMsUUFBUUMsT0FBTyxVQUFEMUgsT0FBV3NILEVBQUlLLFFBQ3RDLEdBQ0YsR0FBQyxDQUFBdEksSUFBQSxjQUFBQyxNQUVELFdBQ0UsT0FBTzZILE1BQU0sR0FBRG5ILE9BQUloQixLQUFLaUksUUFBTyxhQUFhLENBQ3ZDRyxPQUFRLE1BQ1JGLFFBQVNsSSxLQUFLa0ksVUFDYkcsTUFBSyxTQUFDQyxHQUNQLE9BQUlBLEVBQUlDLEdBQ0NELEVBQUlFLE9BR05DLFFBQVFDLE9BQU8sVUFBRDFILE9BQVdzSCxFQUFJSyxRQUN0QyxHQUNGLEdBQUMsQ0FBQXRJLElBQUEsY0FBQUMsTUFFRCxTQUFZc0ksR0FDVixPQUFPVCxNQUFNLEdBQURuSCxPQUFJaEIsS0FBS2lJLFFBQU8sYUFBYSxDQUN2Q0csT0FBUSxRQUNSRixRQUFTbEksS0FBS2tJLFFBQ2RXLEtBQU1DLEtBQUtDLFVBQVUsQ0FDbkJ0SixLQUFNbUosRUFBU25KLEtBQ2YySCxNQUFPd0IsRUFBU3hCLFVBRWpCaUIsTUFBSyxTQUFDQyxHQUNQLE9BQUlBLEVBQUlDLEdBQ0NELEVBQUlFLE9BR05DLFFBQVFDLE9BQU8sVUFBRDFILE9BQVdzSCxFQUFJSyxRQUN0QyxHQUNGLEdBbUJBLENBQUF0SSxJQUFBLFVBQUFDLE1BRUEsU0FBUW9ILEdBQ04sT0FBT1MsTUFBTSxHQUFEbkgsT0FBSWhCLEtBQUtpSSxRQUFPLFVBQVUsQ0FDcENHLE9BQVEsT0FDUkYsUUFBU2xJLEtBQUtrSSxRQUNkVyxLQUFNQyxLQUFLQyxVQUFVLENBQ25CdEosS0FBTWlJLEVBQUtqSSxLQUNYQyxLQUFNZ0ksRUFBS2hJLFNBRVoySSxNQUFLLFNBQUNDLEdBQ1AsT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FHTkMsUUFBUUMsT0FBTyxVQUFEMUgsT0FBV3NILEVBQUlLLFFBQ3RDLEdBQ0YsSSxnRkFpREEsQ0FySXNCLEdDb0JsQkssRUFBTSxJQUFJakIsRUFBSSxDQUNsQkUsUUFBUywrQ0FDVEMsUUFBUyxDQUNQZSxjQUFlLHVDQUNmLGVBQWdCLHNCQUlwQkQsRUFBSUUsa0JBQWtCYixNQUFLLFNBQUNjLEdBQzFCQSxFQUFPakcsU0FBUSxXQUNiLElBQU1rRyxFQUFXLElBQUk5RSxFQUNuQixDQUNFRyxNQUFPMEUsRUFDUHpFLFNBQVUsU0FBQ0ksR0FDVCxJQU9NdUUsRUFQTyxJQUFJN0osRUFDZnNGLEVBQUtyRixLQUNMcUYsRUFBS3BGLEtBQ0xvRixFQUFLbkYsTUFDTDJKLEVBQVd6SixnQkFDWGlGLEVBQUtoRixRQUVrQnlKLGVBQ3pCSCxFQUFTSSxRQUFRSCxFQUNuQixHQUVGcEUsR0FFRm1FLEVBQVMxRSxVQUNYLEdBQ0YsSUFFQSxJQUFNNEUsRUFBYSxJQUFJMUIsRUFBZSxnQkFHdEMsU0FBUzZCLEtBQ1BuRSxFQUFTcEMsU0FBUSxTQUFDZCxHQUNPLElBQUlELEVBQWNDLEVBQWFDLEdBQ3ZDcUgsa0JBQ2pCLEdBQ0YsQ0FDQSxTQUFTQyxLQUNQckUsRUFBU3BDLFNBQVEsU0FBQ2QsR0FDTyxJQUFJRCxFQUFjQyxFQUFhQyxHQUN2Q3VILGlCQUNqQixHQUNGLENBQ0EsU0FBU0MsS0FDUHZFLEVBQVNwQyxTQUFRLFNBQUNkLEdBQ0ssSUFBSUQsRUFBY0MsRUFBYUMsR0FDdkNZLG9CQUNmLEdBQ0YsQ0FuQkFxRyxFQUFXUSxvQkFxQlgsSUFBTWxCLEdBQVcsSUFBSXpCLEVBQVMsQ0FDNUIxSCxLQUFNLGlCQUNOMkgsTUFBTyx3QkFDUEMsT0FBUSwyQkFHVjJCLEVBQUllLGNBQWMxQixNQUFLLFNBQUNjLEdBRXRCUCxHQUFTb0IsWUFBWSxDQUFFdkssS0FBTTBKLEVBQU8xSixLQUFNMkgsTUFBTytCLEVBQU8vQixRQUN4RDNCLEVBQVl4RSxJQUFNa0ksRUFBTzlCLE1BQzNCLElBRUEsSUFBTTRDLEdBQWdCLElBQUk3RCxFQUFjLGtCQUFrQixTQUFDOEQsR0FFekRsQixFQUFJbUIsWUFBWUQsR0FBUTdCLE1BQUssU0FBQ2MsR0FFNUJQLEdBQVNvQixZQUFZLENBQUV2SyxLQUFNMEosRUFBTzFKLEtBQU0ySCxNQUFPK0IsRUFBTy9CLFFBQ3hEM0IsRUFBWXhFLElBQU1rSSxFQUFPOUIsTUFDM0IsSUFDQTRDLEdBQWNoRSxPQUNoQixJQUVNbUUsR0FBaUIsSUFBSWhFLEVBQWMsZ0JBQWdCLFNBQUM4RCxHQUN4RGxCLEVBQUlxQixRQUFRSCxHQUFRN0IsTUFBSyxTQUFDYyxHQUN4QixJQU1NRSxFQU5PLElBQUk3SixFQUNmMkosRUFBTzFKLEtBQ1AwSixFQUFPekosS0FDUHlKLEVBQU94SixNQUNQMkosRUFBV3pKLGlCQUVZMEosZUFDekJhLEdBQWVuRSxRQUNmaEIsRUFBa0JELE9BQU9xRSxFQUMzQixHQVlGLElBRUFsRSxFQUFjckQsaUJBQWlCLFNBQVMsV0FDdENtSSxHQUFjN0osT0FDZHFKLEtBQ0FJLEtBQ0EsSUFLTXBDLEVBTFcsSUFBSU4sRUFBUyxDQUM1QjFILEtBQU0saUJBQ04ySCxNQUFPLDBCQUdtQjJDLGNBQzVCeEUsRUFBY2pGLE1BQVFtSCxFQUFXaEksS0FDakMrRixFQUFpQmxGLE1BQVFtSCxFQUFXTCxNQUNwQ3VDLElBQ0YsSUFFQXZFLEVBQWlCdEQsaUJBQWlCLFNBQVMsV0FDekNzSSxHQUFlaEssT0FDZnFKLEtBQ0FJLEtBQ0FGLElBQ0YsSUFFQU0sR0FBY0gsb0JBQ2RNLEdBQWVOLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL3BhZ2UvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIGxpbmssIGxpa2VzLCBvd25lciwgaGFuZGxlQ2FyZENsaWNrLCB1c2VySWQpIHtcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICB0aGlzLl9saW5rID0gbGluaztcbiAgICB0aGlzLl9saWtlcyA9IGxpa2VzO1xuICAgIHRoaXMub3duZXIgPSBvd25lcjtcbiAgICB0aGlzLnVzZXJJZCA9IHVzZXJJZDtcbiAgICB0aGlzLm9wZW4gPSBoYW5kbGVDYXJkQ2xpY2s7XG4gIH1cbiAgLy9GdW5jacOzbiBwYXJhIGNsb25hciBwbGFudGlsbGFcbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI3RlbXBsYXRlX19lbGVtZW50c1wiKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi50ZW1wbGF0ZV9fZWxlbWVudFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcbiAgfVxuXG4gIF9zZXRQcm9wZXJ0aWVzKCkge1xuICAgIHRoaXMuX2NhcmQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19pbWFnZVwiKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gYEZvdG9ncmFmaWEgZGUgJHt0aGlzLl9uYW1lfWA7XG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fY2FyZFRpdGxlID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3RleHRcIikudGV4dENvbnRlbnQgPVxuICAgICAgdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9idXR0b25MaWtlQ2FyZCA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlLWJ1dHRvblwiKTtcbiAgICAvL3NcbiAgICB0aGlzLl9saWtlQ291bnRlciA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlLW51bWJlclwiKTtcbiAgICB0aGlzLl9saWtlQ291bnRlci50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcbiAgICAvL2VcbiAgICB0aGlzLl9idXR0b25EZWxldGVDYXJkID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3RyYXNoLWljb25cIik7XG4gICAgY29uc29sZS5sb2coXCJvd25lciBpZFwiLCB0aGlzLm93bmVyLCBcInVzZXIgaWRcIiwgdGhpcy51c2VySWQpO1xuICAgIGlmICh0aGlzLm93bmVyICE9PSB0aGlzLnVzZXJJZCkge1xuICAgICAgdGhpcy5fYnV0dG9uRGVsZXRlQ2FyZC5yZW1vdmUoKTtcbiAgICB9XG4gICAgLy9zXG4gICAgLy8gaWYgKHRoaXMuX2xpa2VzLnNvbWUoKGl0ZW0pID0+IGl0ZW0uX2lkID09PSB0aGlzLl91c2VySWQpKSB7XG4gICAgLy8gICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19pY29uX3R5cGVfbGlrZS1hY3RpdmVcIik7XG4gICAgLy8gfVxuICAgIC8vIGlmICh0aGlzLl9vd25lci5faWQgIT09IHRoaXMuX3VzZXJJZCkge1xuICAgIC8vICAgdGhpcy5fZGVsZXRlQnV0dG9uLnJlbW92ZSgpO1xuICAgIC8vIH1cbiAgICAvLyB0aGlzLl9jYXJkLmlkID0gYGlkXyR7dGhpcy5fY2FyZElkfWA7XG4gICAgLy9lXG4gIH1cblxuICBfaGFuZGxlTGlrZUJ0bigpIHtcbiAgICB0aGlzLl9idXR0b25MaWtlQ2FyZC5jbGFzc0xpc3QudG9nZ2xlKFwiZWxlbWVudF9fbGlrZS1idXR0b24tYWN0aXZlXCIpO1xuICB9XG4gIF9oYW5kbGVEZWxldGVCdG4oKSB7XG4gICAgdGhpcy5fY2FyZC5yZW1vdmUoKTtcbiAgfVxuICBoYW5kbGVDYXJkQ2xpY2soKSB7XG4gICAgdGhpcy5vcGVuKHRoaXMuX2NhcmRUaXRsZSwgdGhpcy5fY2FyZEltYWdlLnNyYyk7XG4gIH1cblxuICAvL1xuICAvLyBfaGFuZGxlRGVsZXRlQ2FyZCgpIHtcbiAgLy8gICB0aGlzLl9jYXJkLnJlbW92ZSgpO1xuICAvLyB9XG5cbiAgLy8gX2NoYW5nZUxpa2VDb3VudGVyKG5ld0FycmF5TGlrZXMpIHtcbiAgLy8gICB0aGlzLl9saWtlcyA9IG5ld0FycmF5TGlrZXM7XG4gIC8vICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSBuZXdBcnJheUxpa2VzLmxlbmd0aDtcbiAgLy8gfVxuXG4gIC8vXG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2J1dHRvbkxpa2VDYXJkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQnRuKCk7XG4gICAgfSk7XG4gICAgdGhpcy5fYnV0dG9uRGVsZXRlQ2FyZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQnRuKCk7XG4gICAgfSk7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLmhhbmRsZUNhcmRDbGljaygpO1xuICAgIH0pO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX3NldFByb3BlcnRpZXMoKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHJldHVybiB0aGlzLl9jYXJkO1xuICB9XG59XG4iLCIvL0NsYXNlIEZyb21WYWxpZGF0b3IgY29uIGNvbnN0cnVjdG9yIGNvbiBkb3MgcGFyw6FtZXRyb3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihmb3JtRWxlbWVudCwgc2V0dGluZ3MpIHtcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIHRoaXMuX3NldHRpbmdzID0gc2V0dGluZ3M7XG5cbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9zZXR0aW5ncy5pbnB1dFNlbGVjdG9yKVxuICAgICk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIHRoaXMuX3NldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICAgKTtcbiAgfVxuICAvL23DqXRvZG8gcMO6YmxpY28gcXVlIGFjdGl2YSBsYSB2YWxpZGFjacOzbiBkZWwgZm9ybXVsYXJpb1xuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZnVuY3Rpb24gKGV2dCkge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuICAvLyBtw6l0b2RvIHByaXZhZG8gcGFyYSBldmVudG9zXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIC8vIG3DqXRvZG8gcHJpdmFkbyBwYXJhIHByb2Nlc2FyIGVsIGZvcm11bGFyaW9cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICAvLyBtw6l0b2RvIHByaXZhZG8gcGFyYSBwcm9jZXNhciBlbCBmb3JtdWxhcmlvXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xuICAgIH0pO1xuICB9XG4gIC8vIG3DqXRvZG8gcHJpdmFkbyBwYXJhIGFjdGl2YXIgYm90b25lc1xuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLl9pbnB1dExpc3QpKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCB0cnVlKTsgLy9Fdml0YSBzdWJpciBmb3JtIGNvbiBFbnRlciBjdWFuZG8gbG9zIGNhbXBvcyBubyBwYXNlbiBsYSB2YWxpZGFjacOzblxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTsgLy9QZXJtaXRlIHN1YmlyIGZvcm0gY3VhbmRvIGxvcyBjYW1wb3MgcGFzZW4gbGEgdmFsaWRhY2nDs25cbiAgICB9XG4gIH1cbiAgLy8gbcOpdG9kbyBwcml2YWRvIHBhcmEgcHJvY2VzYXIgZWwgZm9ybXVsYXJpb1xuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5lcnJvckNsYXNzKTtcbiAgfVxuICAvLyBtw6l0b2RvIHByaXZhZG8gcGFyYSBwcm9jZXNhciBlbCBmb3JtdWxhcmlvXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuZXJyb3JDbGFzcyk7XG4gIH1cbiAgLy9tw6l0b2RvIHBhcmEgaGFjZXIgcmVzZXQgZGUgbGEgdmFsaWRhY2nDs24gZGVsIGZvcm11bGFyaW9cbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSk7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNhcmRDb250YWluZXIpIHtcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBjYXJkQ29udGFpbmVyO1xuICB9XG5cbiAgcmVuZGVyZXIoKSB7XG4gICAgdGhpcy5fcmVuZGVyZWRJdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoZWxlbWVudCk7XG4gIH1cbn1cbiIsImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXG4gIHtcbiAgICBuYW1lOiBcIkRldHJvaXQgRG93bnRvd25cIixcbiAgICBsaW5rOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTczMTEyMDY3MjI0LTU4MDYwMzg0YWJkNT9xPTgwJnc9MTk3NCZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZpeGxpYj1yYi00LjAuMyZpeGlkPU0zd3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4ZkElM0QlM0RcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiRXN0YWRpbyBGb3JkXCIsXG4gICAgbGluazogXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTU0MjM4NTkzOS1jYWMzN2UxOTA4MTg/cT04MCZ3PTE5NzQmYXV0bz1mb3JtYXQmZml0PWNyb3AmaXhsaWI9cmItNC4wLjMmaXhpZD1NM3d4TWpBM2ZEQjhNSHh3YUc5MGJ5MXdZV2RsZkh4OGZHVnVmREI4Zkh4OGZBJTNEJTNEXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkRlc2llcnRvIGRlIFV0YWhcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcGx1cy51bnNwbGFzaC5jb20vcHJlbWl1bV9waG90by0xNjk3NzMwMDczNDE3LWMzMmYyMzliNTY3NT9xPTgwJnc9MTk3NCZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZpeGxpYj1yYi00LjAuMyZpeGlkPU0zd3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4ZkElM0QlM0RcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiQXl1bnRhbWllbnRvIGRlIFBhc2FkZW5hLCBDQVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE2OTAwMDIxMjI2OTMtYmVhNjUwZjdiZGY1P3E9ODAmdz0xOTc2JmF1dG89Zm9ybWF0JmZpdD1jcm9wJml4bGliPXJiLTQuMC4zJml4aWQ9TTN3eE1qQTNmREI4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDhmQSUzRCUzRFwiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJIb2xseXdvb2RcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTgxMzkwMTE0OTM5LTk0NmY5YTg5MGE3Zj9xPTgwJnc9MTkzMSZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZpeGxpYj1yYi00LjAuMyZpeGlkPU0zd3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4ZkElM0QlM0RcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiQ2hpY2FnbyBEb3dudG93blwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1ODEzNzM0NDk0ODMtMzc0NDlmOTYyYjZjP3E9ODAmdz0yMDY5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJml4bGliPXJiLTQuMC4zJml4aWQ9TTN3eE1qQTNmREI4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDhmQSUzRCUzRFwiLFxuICB9LFxuXTtcbmV4cG9ydCBjb25zdCBlbGVtZW50Q29udGFpbmRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudHNcIik7XG5leHBvcnQgY29uc3QgcG9wdXBPcGVuSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2ltYWdlLXBvcHVwXCIpO1xuZXhwb3J0IGNvbnN0IGNsb3NlU2hvd0ltYWdlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIucG9wdXBfX2Nsb3NlLWltYWdlXCJcbik7XG5leHBvcnQgY29uc3QgY2xvc2VBZGRQbGFjZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYnRuLWNsb3NlLXBsYWNlXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XG5leHBvcnQgY29uc3QgY2xvc2VGb3JtQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9fY2xvc2UtZm9ybVwiKTtcbmV4cG9ydCBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2VkaXQtZm9ybVwiKVxuKTtcbmV4cG9ydCBjb25zdCBzYXZlUHJvZmlsZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYnRuLWNsb3NlLXByb2ZpbGVcIik7IC8vXG5leHBvcnQgY29uc3QgYWRkSW1hZ2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2J0bi1zdWJtaXQtcGxhY2VcIik7IC8vXG5leHBvcnQgY29uc3QgZm9ybUlucHV0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcG9wdXBfX2lucHV0LW5hbWVcIik7XG5leHBvcnQgY29uc3QgZm9ybUlucHV0QWJvdXRtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiI3BvcHVwX19pbnB1dC1kZXNjcmlwdGlvblwiXG4pO1xuZXhwb3J0IGNvbnN0IGF2YXRhckltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXItaW1hZ2VcIik7XG5leHBvcnQgY29uc3Qgc2V0dGluZ3MgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIjcG9wdXBfX2VkaXQtZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnV0dG9uLWRpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXG59O1xuIiwiaW1wb3J0IHsgY2xvc2VGb3JtQnV0dG9uLCBjbG9zZVNob3dJbWFnZUJ1dHRvbiB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fb3ZlcmxheUVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwLW92ZXJsYXktZWRpdFwiKTtcbiAgICB0aGlzLl9vdmVybGF5QWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwb3B1cC1vdmVybGF5LWFkZFwiKTtcbiAgICB0aGlzLl9vdmVybGF5SW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwLW92ZXJsYXktaW1hZ2VcIik7XG4gIH1cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInBvcHVwX19vcGVuZWRcIik7XG4gICAgdGhpcy5fb3ZlcmxheUVkaXQuY2xhc3NMaXN0LmFkZChcInBvcHVwX19vdmVybGF5LW9wZW5lZFwiKTtcbiAgICB0aGlzLl9vdmVybGF5QWRkLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9fb3ZlcmxheS1vcGVuZWRcIik7XG4gICAgdGhpcy5fb3ZlcmxheUltYWdlLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9fb3ZlcmxheS1vcGVuZWRcIik7XG4gIH1cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9fb3BlbmVkXCIpO1xuICAgIHRoaXMuX292ZXJsYXlFZGl0LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9fb3ZlcmxheS1vcGVuZWRcIik7XG4gICAgdGhpcy5fb3ZlcmxheUFkZC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfX292ZXJsYXktb3BlbmVkXCIpO1xuICAgIHRoaXMuX292ZXJsYXlJbWFnZS5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfX292ZXJsYXktb3BlbmVkXCIpO1xuICB9XG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9vdmVybGF5RWRpdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICAgIHRoaXMuX292ZXJsYXlBZGQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9vdmVybGF5SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgICAvL09wY2lvbiAxXG4gICAgY2xvc2VGb3JtQnV0dG9uLmZvckVhY2goKGNsb3NlQnV0dG9uKSA9PiB7XG4gICAgICBjbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBjbG9zZVNob3dJbWFnZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChldnQpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKGV2dCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19lZGl0LWZvcm1cIik7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcbiAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2lucHV0XCIpXG4gICAgKTtcbiAgICB0aGlzLl9nZXRJbnB1dFZhbHVlcyA9IHRoaXMuX2dldElucHV0VmFsdWVzLmJpbmQodGhpcyk7XG4gIH1cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuZm9ybVZhbHVlcyA9IHt9O1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5mb3JtVmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5mb3JtVmFsdWVzO1xuICB9XG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQucmVzZXQoKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGFib3V0LCBhdmF0YXIsIHVzZXJJZCB9KSB7XG4gICAgdGhpcy5fdXNlck5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWUpO1xuICAgIHRoaXMuX3VzZXJBYm91dG1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhYm91dCk7XG4gICAgdGhpcy5hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhcik7XG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xuICAgIHRoaXMudXNlclZhbHVlcyA9IHsgbmFtZTogXCJcIiwgYWJvdXQ6IFwiXCIgfTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHRoaXMudXNlclZhbHVlcy5uYW1lID0gdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQ7XG4gICAgdGhpcy51c2VyVmFsdWVzLmFib3V0ID0gdGhpcy5fdXNlckFib3V0bWUudGV4dENvbnRlbnQ7XG4gICAgLy90aGlzLl91c2VySWQgPSB1c2VySWQ7XG5cbiAgICByZXR1cm4gdGhpcy51c2VyVmFsdWVzO1xuICB9XG5cbiAgc2V0VXNlckluZm8oZGF0YSkge1xuICAgIHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX3VzZXJBYm91dG1lLnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcbiAgICB0aGlzLl91c2VySWQgPSBkYXRhLl9JZDtcbiAgICB0aGlzLmF2YXRhci5zcmMgPSBkYXRhLmF2YXRhcjtcbiAgICAvLyBpZiAoZGF0YS5hdmF0YXIpIHtcbiAgICAvLyAgIHRoaXMuX2F2YXRhci5zcmMgPSBkYXRhLmF2YXRhcjtcbiAgICAvLyB9XG4gICAgLy8gaWYgKGRhdGEuX2lkKSB7XG4gICAgLy8gICB0aGlzLl91c2VySWQgPSBkYXRhLl9pZDtcbiAgICAvLyB9XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuaGFuZGxlQ2FyZENsaWNrID0gdGhpcy5vcGVuLmJpbmQodGhpcyk7XG4gIH1cbiAgb3BlbihuYW1lLCBsaW5rKSB7XG4gICAgdGhpcy5fc2hvd0ltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZWxlbWVudC1pbWFnZVwiKTtcbiAgICB0aGlzLl9zaG93U3VidGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19lbGVtZW50LXRpdGxlXCIpO1xuICAgIHRoaXMuX3Nob3dJbWFnZS5hbHQgPSBgRm90b2dyYWZpYSBkZSAke25hbWV9YDtcbiAgICB0aGlzLl9zaG93SW1hZ2Uuc3JjID0gbGluaztcbiAgICB0aGlzLl9zaG93U3VidGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIC8vIGN1ZXJwbyBkZWwgY29uc3RydWN0b3JcbiAgICB0aGlzLmJhc2VVcmwgPSBvcHRpb25zLmJhc2VVcmw7XG4gICAgdGhpcy5oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIC8vIHNpIGVsIHNlcnZpZG9yIGRldnVlbHZlIHVuIGVycm9yLCByZWNoYXphIGVsIHByb21pc2VcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgZWRpdFByb2ZpbGUodXNlckluZm8pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lOiB1c2VySW5mby5uYW1lLFxuICAgICAgICBhYm91dDogdXNlckluZm8uYWJvdXQsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8vIGVkaXRBdmF0YXJQcm9maWxlKGRhdGEpIHtcbiAgLy8gICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gIC8vICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgLy8gICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgLy8gICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgLy8gICAgICAgYXZhdGFyOiBkYXRhLmF2YXRhckxpbmssXG4gIC8vICAgICB9KSxcbiAgLy8gICB9KVxuICAvLyAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAvLyAgICAgICBpZiAocmVzLm9rKSB7XG4gIC8vICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gIC8vICAgICAgIH1cbiAgLy8gICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAvLyAgICAgfSlcbiAgLy8gICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gIC8vICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gIC8vICAgICB9KTtcbiAgLy8gfVxuXG4gIGFkZENhcmQoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBsaW5rOiBkYXRhLmxpbmssXG4gICAgICB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICAvLyBzaSBlbCBzZXJ2aWRvciBkZXZ1ZWx2ZSB1biBlcnJvciwgcmVjaGF6YSBlbCBwcm9taXNlXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAvLyAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcbiAgLy8gICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgLy8gICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgLy8gICB9KVxuICAvLyAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAvLyAgICAgICBpZiAocmVzLm9rKSB7XG4gIC8vICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gIC8vICAgICAgIH1cbiAgLy8gICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAvLyAgICAgfSlcbiAgLy8gICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gIC8vICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gIC8vICAgICB9KTtcbiAgLy8gfVxuXG4gIC8vIGFkZExpa2UoY2FyZElkKSB7XG4gIC8vICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xuICAvLyAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAvLyAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAvLyAgIH0pXG4gIC8vICAgICAudGhlbigocmVzKSA9PiB7XG4gIC8vICAgICAgIGlmIChyZXMub2spIHtcbiAgLy8gICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgLy8gICAgICAgfVxuICAvLyAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gIC8vICAgICB9KVxuICAvLyAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgLy8gICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgLy8gICAgIH0pO1xuICAvLyB9XG5cbiAgLy8gcmVtb3ZlTGlrZShjYXJkSWQpIHtcbiAgLy8gICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gIC8vICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gIC8vICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gIC8vICAgfSlcbiAgLy8gICAgIC50aGVuKChyZXMpID0+IHtcbiAgLy8gICAgICAgaWYgKHJlcy5vaykge1xuICAvLyAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAvLyAgICAgICB9XG4gIC8vICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgLy8gICAgIH0pXG4gIC8vICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAvLyAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAvLyAgICAgfSk7XG4gIC8vIH1cbiAgLy8gb3Ryb3MgbcOpdG9kb3MgcGFyYSB0cmFiYWphciBjb24gbGEgQVBJXG59XG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQge1xuICBlbGVtZW50Q29udGFpbmRlcixcbiAgZm9ybUxpc3QsXG4gIHByb2ZpbGVCdXR0b24sXG4gIHByb2ZpbGVBZGRCdXR0b24sXG4gIHNldHRpbmdzLFxuICBmb3JtSW5wdXROYW1lLFxuICBmb3JtSW5wdXRBYm91dG1lLFxuICBhdmF0YXJJbWFnZSxcbn0gZnJvbSBcIi4uL2NvbXBvbmVudHMvdXRpbHMuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcblxuLy9BUElcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViX2VzXzExXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcIjZiYjk2OTFhLTRmNjctNDZkMC05YzVhLTQ5YmI0NWNiNzE4NVwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbmFwaS5nZXRJbml0aWFsQ2FyZHMoKS50aGVuKChyZXN1bHQpID0+IHtcbiAgcmVzdWx0LmZvckVhY2goKCkgPT4ge1xuICAgIGNvbnN0IGNhcmRMaXN0ID0gbmV3IFNlY3Rpb24oXG4gICAgICB7XG4gICAgICAgIGl0ZW1zOiByZXN1bHQsXG4gICAgICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICAgICAgICAgIGl0ZW0ubmFtZSxcbiAgICAgICAgICAgIGl0ZW0ubGluayxcbiAgICAgICAgICAgIGl0ZW0ubGlrZXMsXG4gICAgICAgICAgICBwb3B1cEltYWdlLmhhbmRsZUNhcmRDbGljayxcbiAgICAgICAgICAgIGl0ZW0udXNlcklkXG4gICAgICAgICAgKTtcbiAgICAgICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XG4gICAgICAgICAgY2FyZExpc3QuYWRkSXRlbShjYXJkRWxlbWVudCk7XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgZWxlbWVudENvbnRhaW5kZXJcbiAgICApO1xuICAgIGNhcmRMaXN0LnJlbmRlcmVyKCk7XG4gIH0pO1xufSk7XG5cbmNvbnN0IHBvcHVwSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjaW1hZ2UtcG9wdXBcIik7XG5wb3B1cEltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmZ1bmN0aW9uIHZhbGlkYXRpb25Gb3JtKCkge1xuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IGZvcm1zVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybUVsZW1lbnQsIHNldHRpbmdzKTtcbiAgICBmb3Jtc1ZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gcmVzZXRWYWxpZGF0aW9uRm9ybSgpIHtcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICBjb25zdCBmb3Jtc1ZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FbGVtZW50LCBzZXR0aW5ncyk7XG4gICAgZm9ybXNWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gdG9nZ2xlQnV0dG9uRm9ybSgpIHtcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICBjb25zdCB0b2dnbGVCdXR0b24gPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtRWxlbWVudCwgc2V0dGluZ3MpO1xuICAgIHRvZ2dsZUJ1dHRvbi5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgfSk7XG59XG5cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgbmFtZTogXCIucHJvZmlsZV9fbmFtZVwiLFxuICBhYm91dDogXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIixcbiAgYXZhdGFyOiBcIi5wcm9maWxlX19hdmF0YXItaW1hZ2VcIixcbn0pO1xuXG5hcGkuZ2V0VXNlckluZm8oKS50aGVuKChyZXN1bHQpID0+IHtcbiAgLy9jb25zb2xlLmxvZyhyZXN1bHQpO1xuICB1c2VySW5mby5zZXRVc2VySW5mbyh7IG5hbWU6IHJlc3VsdC5uYW1lLCBhYm91dDogcmVzdWx0LmFib3V0IH0pO1xuICBhdmF0YXJJbWFnZS5zcmMgPSByZXN1bHQuYXZhdGFyO1xufSk7XG5cbmNvbnN0IHBvcHVwUHJvZmlsZTEgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwb3B1cC1wcm9maWxlXCIsIChpbnB1dHMpID0+IHtcbiAgLy9jb25zb2xlLmxvZyhpbnB1dHMpO1xuICBhcGkuZWRpdFByb2ZpbGUoaW5wdXRzKS50aGVuKChyZXN1bHQpID0+IHtcbiAgICAvL2NvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lOiByZXN1bHQubmFtZSwgYWJvdXQ6IHJlc3VsdC5hYm91dCB9KTtcbiAgICBhdmF0YXJJbWFnZS5zcmMgPSByZXN1bHQuYXZhdGFyO1xuICB9KTtcbiAgcG9wdXBQcm9maWxlMS5jbG9zZSgpO1xufSk7XG5cbmNvbnN0IHBvcHVwQWRkSW1hZ2UxID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjcGxhY2UtcG9wdXBcIiwgKGlucHV0cykgPT4ge1xuICBhcGkuYWRkQ2FyZChpbnB1dHMpLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICAgIHJlc3VsdC5uYW1lLFxuICAgICAgcmVzdWx0LmxpbmssXG4gICAgICByZXN1bHQubGlrZXMsXG4gICAgICBwb3B1cEltYWdlLmhhbmRsZUNhcmRDbGlja1xuICAgICk7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuICAgIHBvcHVwQWRkSW1hZ2UxLmNsb3NlKCk7XG4gICAgZWxlbWVudENvbnRhaW5kZXIuYXBwZW5kKGNhcmRFbGVtZW50KTtcbiAgfSk7XG4gIGVsZW1lbnRDb250YWluZGVyO1xuICAvLyBjb25zdCBhZGRDYXJkRWxlbWVudCA9IG5ldyBDYXJkKFxuICAvLyAgIGlucHV0cy5uYW1lLFxuICAvLyAgIGlucHV0cy5saW5rLFxuICAvLyAgIHBvcHVwSW1hZ2UuaGFuZGxlQ2FyZENsaWNrXG4gIC8vICk7XG4gIC8vIGNvbnN0IGNhcmRFbGVtZW50ID0gYWRkQ2FyZEVsZW1lbnQuZ2VuZXJhdGVDYXJkKCk7XG4gIC8vIHBvcHVwQWRkSW1hZ2UxLmNsb3NlKCk7XG4gIC8vIGVsZW1lbnRDb250YWluZGVyLnByZXBlbmQoY2FyZEVsZW1lbnQpO1xuXG4gIC8vIHBvcHVwUHJvZmlsZTEuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbn0pO1xuXG5wcm9maWxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIHBvcHVwUHJvZmlsZTEub3BlbigpO1xuICB2YWxpZGF0aW9uRm9ybSgpO1xuICB0b2dnbGVCdXR0b25Gb3JtKCk7XG4gIGNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgICBuYW1lOiBcIi5wcm9maWxlX19uYW1lXCIsXG4gICAgYWJvdXQ6IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXG4gIH0pO1xuXG4gIGNvbnN0IHVzZXJWYWx1ZXMgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBmb3JtSW5wdXROYW1lLnZhbHVlID0gdXNlclZhbHVlcy5uYW1lO1xuICBmb3JtSW5wdXRBYm91dG1lLnZhbHVlID0gdXNlclZhbHVlcy5hYm91dDtcbiAgcmVzZXRWYWxpZGF0aW9uRm9ybSgpO1xufSk7XG5cbnByb2ZpbGVBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgcG9wdXBBZGRJbWFnZTEub3BlbigpO1xuICB2YWxpZGF0aW9uRm9ybSgpO1xuICB0b2dnbGVCdXR0b25Gb3JtKCk7XG4gIHJlc2V0VmFsaWRhdGlvbkZvcm0oKTtcbn0pO1xuXG5wb3B1cFByb2ZpbGUxLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5wb3B1cEFkZEltYWdlMS5zZXRFdmVudExpc3RlbmVycygpO1xuIl0sIm5hbWVzIjpbIkNhcmQiLCJuYW1lIiwibGluayIsImxpa2VzIiwib3duZXIiLCJoYW5kbGVDYXJkQ2xpY2siLCJ1c2VySWQiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX25hbWUiLCJfbGluayIsIl9saWtlcyIsIm9wZW4iLCJrZXkiLCJ2YWx1ZSIsIl9jYXJkRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfY2FyZCIsIl9nZXRUZW1wbGF0ZSIsIl9jYXJkSW1hZ2UiLCJhbHQiLCJjb25jYXQiLCJzcmMiLCJfY2FyZFRpdGxlIiwidGV4dENvbnRlbnQiLCJfYnV0dG9uTGlrZUNhcmQiLCJfbGlrZUNvdW50ZXIiLCJsZW5ndGgiLCJfYnV0dG9uRGVsZXRlQ2FyZCIsImNvbnNvbGUiLCJsb2ciLCJyZW1vdmUiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJfdGhpcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlTGlrZUJ0biIsIl9oYW5kbGVEZWxldGVCdG4iLCJfc2V0UHJvcGVydGllcyIsIl9zZXRFdmVudExpc3RlbmVycyIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsInNldHRpbmdzIiwiX2Zvcm1FbGVtZW50IiwiX3NldHRpbmdzIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInNvbWUiLCJfaGFzSW52YWxpZElucHV0IiwiYWRkIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImVycm9yTWVzc2FnZSIsIl9lcnJvckVsZW1lbnQiLCJpZCIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfdGhpczIiLCJTZWN0aW9uIiwiX3JlZiIsImNhcmRDb250YWluZXIiLCJpdGVtcyIsInJlbmRlcmVyIiwiX3JlbmRlcmVkSXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbSIsImVsZW1lbnQiLCJhcHBlbmQiLCJlbGVtZW50Q29udGFpbmRlciIsImNsb3NlU2hvd0ltYWdlQnV0dG9uIiwicHJvZmlsZUJ1dHRvbiIsInByb2ZpbGVBZGRCdXR0b24iLCJjbG9zZUZvcm1CdXR0b24iLCJmb3JtTGlzdCIsImZvcm1JbnB1dE5hbWUiLCJmb3JtSW5wdXRBYm91dG1lIiwiYXZhdGFySW1hZ2UiLCJmb3JtU2VsZWN0b3IiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX292ZXJsYXlFZGl0IiwiX292ZXJsYXlBZGQiLCJfb3ZlcmxheUltYWdlIiwiY2xvc2UiLCJjbG9zZUJ1dHRvbiIsIl9oYW5kbGVFc2NDbG9zZSIsIlBvcHVwV2l0aEZvcm0iLCJfUG9wdXAiLCJoYW5kbGVGb3JtU3VibWl0IiwiX2NhbGxTdXBlciIsIl9nZXRJbnB1dFZhbHVlcyIsImJpbmQiLCJfaW5oZXJpdHMiLCJmb3JtVmFsdWVzIiwiaW5wdXQiLCJfZ2V0IiwiX2dldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiY2FsbCIsInJlc2V0IiwiX3RoaXMzIiwiVXNlckluZm8iLCJhYm91dCIsImF2YXRhciIsIl91c2VyTmFtZSIsIl91c2VyQWJvdXRtZSIsIl91c2VySWQiLCJ1c2VyVmFsdWVzIiwiZGF0YSIsIl9JZCIsIlBvcHVwV2l0aEltYWdlIiwiX3Nob3dJbWFnZSIsIl9zaG93U3VidGl0bGUiLCJBcGkiLCJvcHRpb25zIiwiYmFzZVVybCIsImhlYWRlcnMiLCJmZXRjaCIsIm1ldGhvZCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwidXNlckluZm8iLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImFwaSIsImF1dGhvcml6YXRpb24iLCJnZXRJbml0aWFsQ2FyZHMiLCJyZXN1bHQiLCJjYXJkTGlzdCIsImNhcmRFbGVtZW50IiwicG9wdXBJbWFnZSIsImdlbmVyYXRlQ2FyZCIsImFkZEl0ZW0iLCJ2YWxpZGF0aW9uRm9ybSIsImVuYWJsZVZhbGlkYXRpb24iLCJyZXNldFZhbGlkYXRpb25Gb3JtIiwicmVzZXRWYWxpZGF0aW9uIiwidG9nZ2xlQnV0dG9uRm9ybSIsInNldEV2ZW50TGlzdGVuZXJzIiwiZ2V0VXNlckluZm8iLCJzZXRVc2VySW5mbyIsInBvcHVwUHJvZmlsZTEiLCJpbnB1dHMiLCJlZGl0UHJvZmlsZSIsInBvcHVwQWRkSW1hZ2UxIiwiYWRkQ2FyZCJdLCJzb3VyY2VSb290IjoiIn0=